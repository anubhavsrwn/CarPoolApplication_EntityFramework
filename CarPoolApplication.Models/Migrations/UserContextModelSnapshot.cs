// <auto-generated />
using CarPoolApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarPoolApplication.Models.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarPoolApplication.Models.TripBooking", b =>
                {
                    b.Property<string>("TripBookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CostPerHead")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Passenger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripOfferId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TripBookingId");

                    b.HasIndex("Username1");

                    b.ToTable("TripBookings");
                });

            modelBuilder.Entity("CarPoolApplication.Models.TripOffer", b =>
                {
                    b.Property<string>("TripOfferId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPerHead")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<int>("SeatsLeft")
                        .HasColumnType("int");

                    b.Property<int>("SeatsOccupied")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TripOfferId");

                    b.HasIndex("Username1");

                    b.ToTable("TripOffers");
                });

            modelBuilder.Entity("CarPoolApplication.Models.TripRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TripCreater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripOfferId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TripPassenger")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("TripOfferId");

                    b.ToTable("TripRequests");
                });

            modelBuilder.Entity("CarPoolApplication.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("User ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarPoolApplication.Models.TripBooking", b =>
                {
                    b.HasOne("CarPoolApplication.Models.User", null)
                        .WithMany("TripBookings")
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("CarPoolApplication.Models.TripOffer", b =>
                {
                    b.HasOne("CarPoolApplication.Models.User", null)
                        .WithMany("TripOffers")
                        .HasForeignKey("Username1");
                });

            modelBuilder.Entity("CarPoolApplication.Models.TripRequest", b =>
                {
                    b.HasOne("CarPoolApplication.Models.TripOffer", null)
                        .WithMany("TripRequests")
                        .HasForeignKey("TripOfferId");
                });
#pragma warning restore 612, 618
        }
    }
}
